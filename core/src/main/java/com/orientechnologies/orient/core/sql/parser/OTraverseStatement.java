/* Generated By:JJTree: Do not edit this line. OTraverseStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.orientechnologies.orient.core.sql.parser;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class OTraverseStatement extends OStatement {

  public enum Strategy {
    DEPTH_FIRST, BREADTH_FIRST
  }

  protected List<OTraverseProjectionItem> projections = new ArrayList<OTraverseProjectionItem>();

  protected OFromClause                   target;

  protected OWhereClause                  whereClause;

  protected OLimit                        limit;

  protected Strategy                      strategy;

  protected OInteger                      maxDepth;

  public OTraverseStatement(int id) {
    super(id);
  }

  public OTraverseStatement(OrientSql p, int id) {
    super(p, id);
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append("TRAVERSE ");
    boolean first = true;
    for (OTraverseProjectionItem item : projections) {
      if (!first) {
        builder.append(", ");
      }
      builder.append(item.toString());
      first = false;
    }

    if (target != null) {
      builder.append(" FROM ");
      builder.append(target.toString());
    }

    if (maxDepth != null) {
      builder.append(" MAXDEPTH ");
      builder.append(maxDepth.toString());
    }

    if (whereClause != null) {
      builder.append(" WHILE ");
      builder.append(whereClause.toString());
    }

    if (limit != null) {
      builder.append(" ");
      builder.append(limit);
    }

    if (strategy != null) {
      builder.append(" strategy ");
      switch (strategy) {
      case BREADTH_FIRST:
        builder.append("breadth_first");
        break;
      case DEPTH_FIRST:
        builder.append("depth_first");
        break;
      }
    }

    return builder.toString();
  }

  @Override
  public void replaceParameters(Map<Object, Object> params) {
    if (target != null) {
      target.replaceParameters(params);
    }

    if (projections != null) {
      for (OTraverseProjectionItem item : projections) {
        item.replaceParameters(params);
      }
    }

    if (whereClause != null) {
      whereClause.replaceParameters(params);
    }

    if (limit != null) {
      limit.replaceParameters(params);
    }
  }
}
/* JavaCC - OriginalChecksum=47399a3a3d5a423768bbdc70ee957464 (do not edit this line) */
